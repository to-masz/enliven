// Generated by CoffeeScript 1.6.2
(function() {
  var Geometry,
    __operators = Object.prototype.operators = function(operator, object) { switch (operator) {case '+': return this + object;case '-': return this - object;case '/':return this / object;case '*':return this * object;case '%':return this % object;case '^':return this ^ object;default:throw SyntaxError('Object does not support "' + operator + '" operator');}};

  window.Geometry = Geometry = {};

  Geometry.Plane = (function() {
    function Plane() {
      this.point = new Vec3([]);
      this.normal = new Vec3([]);
      this.d = 0.0;
      if (arguments.length > 0) {
        this.set.apply(this, arguments);
      }
    }

    Plane.prototype.set = function() {
      var normal, point, points, tmp1, tmp2;
      if (arguments.length === 2) {
        point = arguments[0];
        normal = arguments[1];
        this.normal.copyFrom(normal).normalize();
        this.d = (normal).operators("*",point);
      } else if (arguments.length === 3) {
        points = arguments;
        tmp1 = (points[1]).operators("-",points[0]);
        tmp2 = (points[2]).operators("-",points[0]);
        this.normal = (tmp1(x(tmp2))).normalize();
        this.d = -((this.normal).operators("*",points[0]));
      }
      return this.point = (this.normal).operators("^>",this.d);
    };

    Plane.prototype.intersectRayPoint = function(orign, direction) {
      var denom, point, t;
      denom = (this.normal).operators("*",direction);
      if (Math.abs(denom < 0.00001)) {
        return false;
      }
      t = (-((this.d).operators("+",((this.normal).operators("*",orign))))).operators("/",denom);
      if (t <= 0) {
        return false;
      }
      point = (orign).operators("+",((direction).operators("*",t)));
      return point;
    };

    return Plane;

  })();

}).call(this);
