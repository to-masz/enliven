// Generated by CoffeeScript 1.6.2
(function() {
  var Component;

  window.Component = Component = (function() {
    function Component() {}

    Component.prototype.getHandle = function(gl) {
      var _ref, _ref1;
      return (_ref = (_ref1 = this.contexts) != null ? _ref1[gl.id] : void 0) != null ? _ref : null;
    };

    Component.prototype.setHandle = function(gl, handle) {
      if (this.contexts === void 0) {
        this.contexts = {};
      }
      return this.contexts[gl.id] = handle;
    };

    Component.prototype.getEventListeners = function(name) {
      var _base;
      if (this.event_listeners == null) {
        this.event_listeners = {};
      }
      if ((_base = this.event_listeners)[name] == null) {
        _base[name] = [];
      }
      return this.event_listeners[name];
    };

    Component.prototype.addEventListener = function(name, callback) {
      var ary;
      ary = this.getEventListeners(name);
      ary.push(callback);
      return callback;
    };

    Component.prototype.removeEventListener = function(name, index) {
      var ary, func;
      if (!name || index === void 0) {
        throw new Error("both event type and listener index are required");
      }
      ary = this.getEventListeners(name);
      func = ary[index];
      if (ary[index]) {
        delete ary[index];
      }
      return func;
    };

    Component.prototype.fireEvent = function(name, event_object) {
      var listener, listeners, _i, _len, _results;
      listeners = this.getEventListeners(name);
      if (event_object && event_object.type === void 0) {
        event_object.type = name;
      }
      _results = [];
      for (_i = 0, _len = listeners.length; _i < _len; _i++) {
        listener = listeners[_i];
        _results.push(listener.call(this, event_object));
      }
      return _results;
    };

    return Component;

  })();

}).call(this);
